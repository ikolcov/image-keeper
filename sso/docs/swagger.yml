swagger: '2.0'
info:
  description: |
    SSO API
  version: 1.0.0
  title: myImageKeeper
  contact:
    name: ikolcov@yandex.ru
  license:
    name: MIT
    url: 'https://opensource.org/licenses/MIT'
host: 'localhost:3000'
basePath: /api/v1
schemes:
  - http
paths:
  /auth/signup:
    post:
      tags:
        - signup
      summary: Enter credentials and sign up
      description: ''
      operationId: handleSignup
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: New user object
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/TokenResponse'
        '400':
          description: invalid credentials
          schema:
            $ref: '#/definitions/ErrorResponse'
        '409':
          description: duplicate username or email
          schema:
            $ref: '#/definitions/ErrorResponse'
  /auth/login:
    post:
      tags:
        - login
      summary: Enter credentials and get access token and refresh token
      description: ''
      operationId: handleLogin
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Login and password object
          required: true
          schema:
            type: object
            properties:
              user:
                type: string
              password:
                type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/TokenResponse'
        '400':
          description: invalid credentials
          schema:
            $ref: '#/definitions/ErrorResponse'
  /auth/login/refresh:
    post:
      tags:
        - login
      summary: Enter username with refresh token and get new pair of access token and refresh token
      description: ''
      operationId: handleRefresh
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Login and refresh token object
          required: true
          schema:
            type: object
            properties:
              user:
                type: string
              token:
                type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/TokenResponse'
        '400':
          description: invalid, already used or expired token
          schema:
            $ref: '#/definitions/ErrorResponse'
  /auth/recover-password:
    post:
      tags:
        - recover
      summary: Enter email and get recovery token
      description: ''
      operationId: handleRecovery
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Object with user email
          required: true
          schema:
            type: object
            properties:
              email:
                type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/RecoveryTokenResponse'
        '400':
          description: invalid credentials
          schema:
            $ref: '#/definitions/ErrorResponse'
  '/auth/recover-password/{recoveryToken}':
    post:
      tags:
        - recover
      summary: 'Put token in query, new password in body and have it changed'
      description: ''
      operationId: processRecovery
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: recoveryToken
          description: Token granted before
          required: true
          type: string
        - in: body
          name: body
          description: Object with user password
          required: true
          schema:
            type: object
            properties:
              password:
                type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/SuccessResponse'
        '400':
          description: invalid or already used token
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: expired token
          schema:
            $ref: '#/definitions/ErrorResponse'
definitions:
  TokenResponse:
    type: object
    properties:
      status:
        type: string
      accessToken:
        type: string
      refreshToken:
        type: string
  RecoveryTokenResponse:
    type: object
    properties:
      status:
        type: string
      token:
        type: string
  ErrorResponse:
    type: object
    properties:
      status:
        type: string
      message:
        type: string
  SuccessResponse:
    type: object
    properties:
      status:
        type: string
  User:
    type: object
    properties:
      user:
        type: string
      email:
        type: string
      password:
        type: string